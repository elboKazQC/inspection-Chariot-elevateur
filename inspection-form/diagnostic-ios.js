// Script de diagnostic pour les probl√®mes de connexion iOS
const os = require('os');

async function diagnosticIOS() {
    console.log('üîç DIAGNOSTIC DE CONNEXION iOS');
    console.log('================================\n');

    // 1. V√©rifier les interfaces r√©seau
    console.log('üì° Interfaces r√©seau disponibles:');
    const networkInterfaces = os.networkInterfaces();
    const addresses = [];
    
    Object.keys(networkInterfaces).forEach(ifname => {
        networkInterfaces[ifname].forEach(iface => {
            if (iface.family === 'IPv4' && !iface.internal) {
                addresses.push({
                    interface: ifname,
                    address: iface.address,
                    mac: iface.mac
                });
                console.log(`  ‚úì ${ifname}: ${iface.address}`);
            }
        });
    });

    if (addresses.length === 0) {
        console.log('  ‚ùå Aucune interface r√©seau active trouv√©e');
        return;
    }

    console.log('\nüîó URLs √† tester sur iOS:');
    addresses.forEach(addr => {
        console.log(`  HTTPS: https://${addr.address}:8443`);
        console.log(`  HTTP:  http://${addr.address}:3000`);
    });

    // 2. Tester les certificats HTTPS
    console.log('\nüîí Test des certificats HTTPS:');
    try {
        const { getCerts } = require('https-localhost');
        const certs = await getCerts();
        console.log('  ‚úì Certificats HTTPS g√©n√©r√©s avec succ√®s');
        console.log(`  ‚úì Certificat valide pour localhost`);
    } catch (error) {
        console.log('  ‚ùå Erreur avec les certificats HTTPS:', error.message);
        console.log('  üí° Installez https-localhost: npm install https-localhost');
    }

    // 3. Conseils sp√©cifiques iOS
    console.log('\nüì± CONSEILS SP√âCIFIQUES POUR iOS:');
    console.log('  1. Utilisez Safari (meilleure compatibilit√© que Chrome)');
    console.log('  2. D√©sactivez le mode priv√© dans Safari');
    console.log('  3. Acceptez le certificat auto-sign√© quand iOS vous le demande');
    console.log('  4. V√©rifiez que l\'iPhone/iPad est sur le m√™me WiFi');
    console.log('  5. Si les signatures ne marchent pas, rafra√Æchissez la page');

    // 4. Test de connectivit√©
    console.log('\nüß™ TESTS RECOMMAND√âS:');
    addresses.forEach(addr => {
        console.log(`  ‚Ä¢ Test HTTPS: https://${addr.address}:8443/api/test`);
        console.log(`  ‚Ä¢ Page diagnostic: https://${addr.address}:8443/connection-info`);
    });

    console.log('\n‚úÖ Diagnostic termin√©.');
    console.log('üí° Utilisez: npm run ios pour d√©marrer le serveur optimis√© iOS.');
}

// Ex√©cuter le diagnostic
if (require.main === module) {
    diagnosticIOS().catch(console.error);
}

module.exports = { diagnosticIOS };
